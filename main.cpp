#include <iostream>
#include <fstream>

//C:\Users\К - 14\Documents\Суслов Игорь\OOP21\x64\Debug


    //SOLID - один из принципов составления программ в ООП: 
    // S - Единственная ответственность (один объект, класс отвечает сам за себя).
    // O - Принцип Открытости/Закрытости (классы (программыне сущности) должны быть открыты для расширения но закрыты для модификации)
    // L - Принцип подстановки Лисков (функции которые используют базовый тип должны иметь возможность использовать подтипы не зная об этом, функции использующие базовый класс должны иметь возможность использовать наследников не зная об этом)
    // I - Принцип разделения интерфейса (больше интерфейсов малых чем один большой)
    // D - Принцип инверсии зависимостей (зависимость от абстракций а не от реализации)
 
//Патерн проектирования: фабричный метод




int main(int argc, char** argv){
    //Аргументы командной строки
   /* if (argc > 1) {
        for (int i = 0; i < argc; i++) {
            std::string s = std::string (argv[i]);
            std::cout << s << std::endl;
        }

        std::string filename = std::string(argv[1]);
        std::cout << filename << std::endl; //в проекте выводить не надо
        std::ifstream fin(filename); // тоже самое std::ifstream fin("filename.ini");
    }
    else {
        std::cout << "Only one argument was provided" << std::endl;
    }


   // std::cout << "Hello World!\n";*/

}